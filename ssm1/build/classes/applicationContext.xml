<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 1. 通过注解，将Service的生命周期纳入Spring的管理 -->
	<context:annotation-config />
	<context:component-scan base-package="com.how2java.service" />

	<!-- 2. 配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName"> <value>com.mysql.jdbc.Driver</value> </property> 
		<property name="url"> <value>jdbc:mysql://localhost:3306/how2java?characterEncoding=UTF-8 
		</value> </property> <property name="username"> <value>root</value> </property> 
		<property name="password"> <value>root</value> </property> </bean> -->
	<!-- 2. 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/how2java?characterEncoding=UTF-8" />
		<property name="user" value="root" />
		<property name="password" value="root" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="typeAliasesPackage" value="com.how2java.pojo" />
		<property name="dataSource" ref="dataSource" />
		<!-- 3. 扫描存放SQL语句的Category.xml -->
		<property name="mapperLocations" value="classpath:com/how2java/mapper/*.xml" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<!--使用下面的方式配置参数，一行配置一个 -->
						<value>
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- 配置 转换器，对于在basePackage设置的包（包括子包）下的接口类 的全类名，如果在Mapper.xml文件中定义过命名空间， 
		将被转换成spring的BEAN，在调用 的地方通过@Autowired方式将可以注入接口实例 -->
	<!-- 4. 扫描Mapper，并将其生命周期纳入Spring的管理 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.how2java.mapper" />
	</bean>

	<!-- 5.配置事务管理器,管理数据源事务处理 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 6.配置事务通知，aop方式-->
	<tx:advice id="txadvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />  
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>  
            <tx:method name="list*" propagation="REQUIRED" rollback-for="Exception"/>  
        </tx:attributes>  
    </tx:advice>  
    
    <aop:config>  
        <aop:pointcut id="serviceMethod" expression="execution(* com.how2java.service.*.*(..))"/>  
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txadvice"/>  
    </aop:config>
</beans>